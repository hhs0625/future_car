[환경요소]
number-of-cars : 94
acc : 0.003
deceleration : 0.03
max-patience : 40

[파라미터]
max_farsee_units : 5 (윈도우 갯수)
ticks_in_unit : 5 (좌표) 
ratio_to_change : 5 (배, times)

* 편차 계산 필요 : 개선후의 편차가 작아지는 것 같음
* 최종 결과는 boxplot 으로 표현 가능
* 각각의 case 에 대한 차트
* 전체 결과의 차트 (각 case 에 대한 평균 속도 라인 차트)
* 결과 분석에 대한 python 개발 필요.
* 특정 상황에 대한 설명으로
* 파라미터 튜닝에 딥러닝 사용가능할 수도
  (최적의 도로 상황에 adaptive 한 parameter 설정으로
  최적 도로 만들수 있다.. localized service )
* 정체 상황이 주기 적으로 만들어질때 마다 평균속도 저하로 연결됨
  편차가 커지는 효과로 이어지는데, 본 알고리즘을 적용하면 
  정체 상황을 경감시키면서 결과적으로 편차가 작아지고 
  전체 도로 상황의 개선으로 연결된다. 
* 정체 상황을 추가적으로 개선할 수 있는 방법으로 전방의 
  정체 상황이 감지될 경우에 속도를 줄이는 것도 개선 효과를 가져올수 있다.
  일반적인 상황에서는 개별 차량의 감속은 후방 차량들의 정체로 연결되고 있으나, 
  전방에서 큰폭의 감속은 더 큰 정체 상황을 만들게 됨으로서, 미리 속도를 줄여서
  차량 우회를 자연스럽게 유도함으로서 정체를 더 개선 할 수 있다. 
  

1. 1대 정지
- 기존 : 0.17
- 적용 : 0.26 (52% 개선)

2. 2대 정지
- 기존 : 0.14
- 적용 : 0.20 (42% 개선)


3. 3대 정지 상황
- 기존 : 0.12
- 적용 : 0.18 (50% 개선)
